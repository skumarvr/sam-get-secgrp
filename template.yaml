AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-get-secgrp
  Sample SAM Template for sam-get-secgrp

Globals:
  Function:
    Timeout: 20

Resources:
  GetSecGrpApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Auth:
        DefaultAuthorizer: SecGrpLambdaTokenAuthorizer
        Authorizers:
          SecGrpLambdaTokenAuthorizer:
            FunctionArn: !GetAtt GetSecGrpLambdaAuthFunction.Arn

  GetSecGrpLambdaAuthFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: get-secgrp-lambdaAuth/
      Handler: app.lambdaHandler
      Runtime: nodejs12.x

  GetSecGrpFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: get-secgrp/
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      Events:
        GetSecGrp:
          Type: Api 
          Properties:
            RestApiId: !Ref GetSecGrpApi
            Path: /secgrp
            Method: get
      Policies:
      - Statement:
        - Sid: EC2DescribeSecurityGroupsPolicy
          Effect: Allow
          Action:
          - ec2:DescribeSecurityGroups
          Resource: '*'

Outputs:
  GetSecGrpApi:
    Description: "API Gateway endpoint URL for Prod stage for Get Security Group function"
    Value: !Sub "https://${GetSecGrpApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/secgrp/"
  GetSecGrpFunction:
    Description: "Get Security Group Lambda Function ARN"
    Value: !GetAtt GetSecGrpFunction.Arn
  GetSecGrpFunctionIamRole:
    Description: "Implicit IAM Role created for Get Security Group function"
    Value: !GetAtt GetSecGrpFunctionRole.Arn
  GetSecGrpLambdaAuthFunction:
    Description: "ApiGateway Lambda Authorizer Function ARN"
    Value: !GetAtt GetSecGrpLambdaAuthFunction.Arn
  GetSecGrpLambdaAuthIamRole:
    Description: "Implicit IAM Role created for Lambda Authorizer"
    Value: !GetAtt  GetSecGrpLambdaAuthFunctionRole.Arn
